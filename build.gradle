// Apply the java plugin to add support for Java
apply plugin: 'java'

//Load the OpenCV Configuration
apply from: 'opencv_config.gradle'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.21'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}

jar {
    manifest {
        attributes (
            'Main-Class': 'org.net9.tinymoeface.trainer.FaceDetectionTrainer',
            'Class-Path': "libs/$openCVJarName"
        )
    }
}

dependencies {
    compile files("$openCVJavaBinDir/$openCVJarName")
}

task copyOpenCV(type: Copy) {
    from("$openCVJavaBinDir/$openCVJarName", "$openCVJavaBinDir/$openCVSharedLibraryName")
    into('build/libs/libs')
}

copyOpenCV.dependsOn jar
assemble.dependsOn copyOpenCV

task run(type:Exec) {
    commandLine 'java', '-jar', 'build/libs/' + rootProject.name + '.jar'
}

run.dependsOn assemble
